-- ============================================
-- AirlineDB Analysis Queries
-- Description: Some of the SQL queries for analyzing airline booking & flight data
-- ============================================

-- 1Ô∏è‚É£ Top 10 Routes by Passenger Count
SELECT 
    route_id, 
    COUNT(passenger_id) AS total_passengers
FROM bookings
GROUP BY route_id
ORDER BY total_passengers DESC
LIMIT 10;

-- 2Ô∏è‚É£ Monthly Passenger Flow Trends
SELECT 
    DATE_FORMAT(booking_date, '%Y-%m') AS month,
    COUNT(passenger_id) AS total_passengers
FROM bookings
GROUP BY month
ORDER BY month;

-- 3Ô∏è‚É£ Load Factor (Seat Occupancy Rate) Per Flight
SELECT 
    f.flight_id,
    COUNT(b.booking_id) / f.total_seats * 100 AS load_factor_percentage
FROM flights f
LEFT JOIN bookings b ON f.flight_id = b.flight_id
GROUP BY f.flight_id
ORDER BY load_factor_percentage DESC;

-- 4Ô∏è‚É£ Highest Revenue Routes
SELECT 
    r.route_id,
    SUM(b.ticket_price) AS total_revenue
FROM bookings b
JOIN flights f ON b.flight_id = f.flight_id
JOIN routes r ON f.route_id = r.route_id
GROUP BY r.route_id
ORDER BY total_revenue DESC
LIMIT 5;

-- 5Ô∏è‚É£ Flights with Frequent Delays
SELECT 
    f.flight_id,
    COUNT(*) AS delay_count
FROM flights f
WHERE f.actual_departure_time > f.scheduled_departure_time
GROUP BY f.flight_id
HAVING delay_count > 5
ORDER BY delay_count DESC;

-- 6Ô∏è‚É£ Underperforming Routes (Low Seat Occupancy)
SELECT 
    r.route_id,
    AVG(COUNT(b.booking_id) / f.total_seats * 100) AS avg_load_factor
FROM flights f
LEFT JOIN bookings b ON f.flight_id = b.flight_id
JOIN routes r ON f.route_id = r.route_id
GROUP BY r.route_id
HAVING avg_load_factor < 60
ORDER BY avg_load_factor ASC;

-- 7Ô∏è‚É£ Seasonal Passenger Trends
SELECT 
    MONTH(booking_date) AS month,
    COUNT(passenger_id) AS passenger_count
FROM bookings
GROUP BY month
ORDER BY passenger_count DESC;

-- 8Ô∏è‚É£ Passenger Count per Airline
SELECT 
    a.airline_name,
    COUNT(b.passenger_id) AS total_passengers
FROM bookings b
JOIN flights f ON b.flight_id = f.flight_id
JOIN airlines a ON f.airline_id = a.airline_id
GROUP BY a.airline_name
ORDER BY total_passengers DESC;

-- 9Ô∏è‚É£ Average Ticket Price by Route
SELECT 
    r.route_id,
    AVG(b.ticket_price) AS avg_ticket_price
FROM bookings b
JOIN flights f ON b.flight_id = f.flight_id
JOIN routes r ON f.route_id = r.route_id
GROUP BY r.route_id
ORDER BY avg_ticket_price DESC;

-- üîü Total Bookings Per Day
SELECT 
    booking_date,
    COUNT(*) AS total_bookings
FROM bookings
GROUP BY booking_date
ORDER BY booking_date;
